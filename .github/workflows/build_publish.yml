name: build_publish

on:
  #push:
  #  branches: [master]
  #pull_request:
  #  branches: [master]
  release:
    types: [published]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: python -m pip install --upgrade setuptools wheel cmake build

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          # configure cibuildwheel to build native archs ('auto'), and some emulated ones
          CIBW_ARCHS_LINUX: auto64 aarch64
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.9" # limit to 3.9 and up since build takes forever otherwise
          CIBW_SKIP: pp* # disable building PyPy wheels on all platforms
          CIBW_BUILD_VERBOSITY: 3

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: python -m pip install --upgrade setuptools wheel cmake build

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  publish:
    runs-on: ubuntu-22.04
    needs: [build_wheels, build_sdist]
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
    - name: Download
      uses: actions/download-artifact@v4
      with:
        # unpacks all CIBW artifacts into dist/
        pattern: cibw-*
        path: dist
        merge-multiple: true

    - name: Publish
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
